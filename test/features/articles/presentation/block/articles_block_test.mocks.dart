// Mocks generated by Mockito 5.3.2 from annotations
// in news_app/test/features/articles/presentation/block/articles_block_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/core/error/failures.dart' as _i6;
import 'package:news_app/core/utils/url_converter.dart' as _i8;
import 'package:news_app/features/articles/domain/entities/article.dart' as _i7;
import 'package:news_app/features/articles/domain/repositories/articles_repository.dart'
    as _i2;
import 'package:news_app/features/articles/domain/usecases/get_articles_from_url.dart'
    as _i4;
import 'package:news_app/features/articles/domain/usecases/set_to_favorites.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeArticlesRepository_0 extends _i1.SmartFake
    implements _i2.ArticlesRepository {
  _FakeArticlesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetArticlesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetArticlesUseCase extends _i1.Mock
    implements _i4.GetArticlesUseCase {
  @override
  _i2.ArticlesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeArticlesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeArticlesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ArticlesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Article>>> call(
          {required _i4.Params? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.Article>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.Article>>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.Article>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.Article>>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Article>>>);
}

/// A class which mocks [UrlConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlConverter extends _i1.Mock implements _i8.UrlConverter {
  @override
  _i3.Either<_i8.InvalidUrlFailure, Uri> toURI(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #toURI,
          [url],
        ),
        returnValue: _FakeEither_1<_i8.InvalidUrlFailure, Uri>(
          this,
          Invocation.method(
            #toURI,
            [url],
          ),
        ),
        returnValueForMissingStub: _FakeEither_1<_i8.InvalidUrlFailure, Uri>(
          this,
          Invocation.method(
            #toURI,
            [url],
          ),
        ),
      ) as _i3.Either<_i8.InvalidUrlFailure, Uri>);
}

/// A class which mocks [SetArticleToFavoritesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetArticleToFavoritesUseCase extends _i1.Mock
    implements _i9.SetArticleToFavoritesUseCase {
  @override
  _i2.ArticlesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeArticlesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeArticlesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ArticlesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(
          {required _i9.CAParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, void>>.value(
                _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}
